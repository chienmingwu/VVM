#!/bin/csh
# Script which compiles and calls the Fortran executable and 
# runs the simulation.
# This script is called by the batch script "btch_vvcm_cam".
#-------------------------------------------------------------------  

# The compilation to the gnumakefile system and will only
#  compile if code has been updated. If you are changing
#  compilation options 'make clobber' first.
# The format is make, compiler_option=true (if platform has more than
#  one compiler available) DEBUG=logical_value (default is false and
#  can be omitted if default is desired).
# Example: make INTEL=true DEBUG=true

set echo  # echoes the commands
set expname = case_bubble

# set job system and compiler
set compiler = 'intel_mogamd'
set jobsys   = 'slurm_mogamd_intel'

# set paths
set vvmdir = ` pwd | rev | cut -d/ -f 3- | rev `
set casedir = ` pwd `
set datadir = ${vvmdir}'/DATA'
set rundir = ${vvmdir}'/RUN'
set expdir = ${datadir}'/'${expname}
set codedir = ${datadir}'/'${expname}'/CODE'
set blddir = ${vvmdir}'/RUN/SYSTEM'

# prepare for compiling code
cd ${expdir}
rsync -av ${vvmdir}'/CODE' .
set user_codes_list = `find ${casedir}/user_codes/ -type f`
cp ${user_codes_list} ${codedir}
cp ${casedir}/user_module.F ${codedir}
csh DOMAIN

if( ! -d ${expdir}'/compile_code' ) then
  mkdir ${expdir}'/compile_code'
  cd ${expdir}'/compile_code'
else
  # clean previous compilation
  cd ${expdir}'/compile_code'
  make RUNDIR=${blddir} CASENAME=${expname} COMPILER=${compiler} -f ${blddir}/makefile clean
endif

# compile both create_topolsm and vvm
make RUNDIR=${blddir} CASENAME=${expname} CODEDIR=${codedir} EXPDIR=${expdir} COMPILER=${compiler} -f ${blddir}/makefile newtopo
make RUNDIR=${blddir} CASENAME=${expname} CODEDIR=${codedir} EXPDIR=${expdir} COMPILER=${compiler} -f ${blddir}/makefile -j8

# Set walltime to large number instead of marking it if you don't need it.
sed -e 's/expname.out/'${expname}'.out/g' \
    -e 's/expname.err/'${expname}'.err/g' \
    -e 's/expname/'${expname}'/g' \
    -e 's/walltime/18:00:00/g' \
    -e 's/np_nodes/1/g' \
    -e 's/np_threads/64/g' \
    -e 's/total_cores/64/g' ${blddir}/run.sh.${jobsys} > ${expdir}/run.sh

cd ${expdir}
sbatch run.sh

exit

